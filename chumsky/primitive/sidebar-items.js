window.SIDEBAR_ITEMS = {"fn":[["any","A parser that accepts any input (but not the end of input)."],["choice","Parse using a tuple of many parsers, producing the output of the first to successfully parse."],["custom","A parser primitive that allows you to define your own custom parsers."],["empty","A parser that parses no inputs."],["end","A parser that accepts only the end of input."],["filter","A parser that accepts only inputs that match the given predicate."],["filter_map","A parser that accepts a input and tests it against the given fallible function."],["just","A parser that accepts only the given input."],["none_of","A parser that accepts any input that is not in a sequence of specific inputs."],["one_of","A parser that accepts one of a sequence of specific inputs."],["seq","A parser that accepts only a sequence of specific inputs."],["take_until","A parser that accepts any number of inputs until a terminating pattern is reached."],["todo","A parser that can be used wherever you need to implement a parser later."]],"struct":[["Choice","See [`choice`]."],["Custom","See [`custom`]."],["Empty","See [`empty`]."],["End","See [`end`]."],["Filter","See [`filter`]."],["FilterMap","See [`filter_map`]."],["Just","See [`just`]."],["NoneOf","See [`none_of`]."],["OneOf","See [`one_of`]."],["Seq","See [`seq`]."],["TakeUntil","See [`take_until`]."],["Todo","See [`fn@todo`]."]],"trait":[["Container","A utility trait to abstract over linear container-like things."]],"type":[["Any","See [`any`]."]]};